=head1 NAME

ctf.manifest - declaration of files managed by ctf(1)

=head1 SYNOPSIS

/var/lib/ctf/content/ctf.manifest

=head1 DESCRIPTION

ctf.manifest is a declaration of metadata about some
of the files managed by L<ctf(1)>.

If a file is declared in ctf.manifest but absent from the
content of the repository, ctf(1) will issue a warning.

If a file is present in the content of the repository but
not declared in ctf.manifest, ctf(1) will install it, applying
the normal defaults to determine the file's metadata.

ctf.manifest should be a YAML file, with the
top level structure being a list of mappings.  The content of these
mappings is described below.

=head1 REQUIRED ATTRIBUTES

=over 4

=item path

Path to the file in its final installed location.  Paths starting
"/" are in the root component, and
are relative to the root directory.  Paths starting "~" are
in the home component, and are
relative to the home directory of the user running ctf.

Additional components may be defined in future, beginning with
other characters.

=back

=head1 OPTIONAL ATTRIBUTES

=over 4

=item text-encoding

Name of the text encoding scheme for the content of this file.

Default is utf-8.

If set to "none", ctf will conclude it is not safe to display
the file's contents by printing them
to the terminal.

=item group

Name of the group to own the file.  Default is the GID of the user running
ctf(1).

=item mode

String of octal digits representing of the file's mode.  Default is "0444".

=item owner

Username of the file's owner.  Default is the UID of the user running
ctf(1).

=item old

Path to the saved copy of the previous version of the file.
Ctf saves the previous version of the file when it is deploying a new
version.  By default, the name of the saved copy is <filename>.ctfold.

=item orig

Path to the saved copy of the original version of the file.  FIXME:
haven't yet determined whether it's feasible to implement this
reliably.

=item depends

File(s) which should be deployed before this one.  All config
files depend on their own prectfs, and are depended
upon by their postctfs, automatically, should these exist.

This item may be single-valued, or it may be a list of values.

=item status

If "ex", this means the file used to be managed by ctf, but is no
more.  ctf will remove it.  (This could be designed a bit nicer,
look at how package managers know which files they manage).

=item post

Name(s) of program(s) to run after installing this file.  Normally 
used to activate the new
configuration.  The program will be run with this file's name
as an argument.  For more details, see postctf(3).

If the post program is also managed by ctf, it will be updated
before being run.

TODO: if it fails (non zero exit status), 
this file and its group are replaced by
their previous versions.

This item may be single-valued, or it may be a list of values.

=item pre

Name(s) of program(s) to run before installing this file.  Normally
used to validate the file's contents.  The path to this file
in the repository component will be passed to the program (not
the path to this file in its final destination).  For more
details, see L<prectf(3)>.

TODO: If the pre program exits non-zero, ctf will conclude that this
file should not be installed.

This item may be single-valued, or it may be a list of values.

=back

=head1 SEE ALSO

=over 4

=item ctf(1)

=item ctf.conf(5)

=back

=cut
